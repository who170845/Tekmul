{"ast":null,"code":"const speechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\nconst recognition = new speechRecognition();\nrecognition.lang = 'id-ID';\nrecognition.interimResults = true;\nrecognition.maxAlternatives = 1;\nconst startBtn = document.getElementById('start-btn');\nconst stopBtn = document.getElementById('stop-btn');\nconst text = document.getElementById('text');\nlet transcript = '';\nexport default {\n  data() {\n    return {};\n  },\n  methods: {\n    startRecord() {\n      recognition.onstart = () => {\n        console.log('Speech recognition service has started');\n        startBtn.disabled = true;\n        stopBtn.disabled = false;\n      };\n    },\n    stopRecord() {\n      recognition.onend = () => {\n        console.log('Speech recognition service has started');\n        startBtn.disabled = false;\n        stopBtn.disabled = true;\n      };\n    }\n  }\n};\nrecognition.onstart = () => {\n  console.log('Speech recognition service has started');\n  startBtn.disabled = true;\n  stopBtn.disabled = false;\n};\nrecognition.onresult = event => {\n  const resultIndex = event.resultIndex;\n  const transcript = event.results[resultIndex][0].transcript;\n  console.log(transcript);\n  text.innerHTML = transcript;\n};\nrecognition.onend = () => {\n  console.log('Speech recognition service disconnected');\n  startBtn.disabled = false;\n  stopBtn.disabled = true;\n};\nrecognition.onerror = event => {\n  console.log('Error occurred in recognition: ' + event.error);\n};\nstartBtn.addEventListener('click', () => {\n  recognition.start();\n});\nstopBtn.addEventListener('click', () => {\n  recognition.stop();\n});","map":{"version":3,"names":["speechRecognition","window","SpeechRecognition","webkitSpeechRecognition","recognition","lang","interimResults","maxAlternatives","startBtn","document","getElementById","stopBtn","text","transcript","data","methods","startRecord","onstart","console","log","disabled","stopRecord","onend","onresult","event","resultIndex","results","innerHTML","onerror","error","addEventListener","start","stop"],"sources":["D:\\kuliah\\Sem 4\\Tekmul\\vue-router\\client\\src\\views\\main.vue"],"sourcesContent":["<template>\r\n<head>\r\n  <title> Speech To Text</title>\r\n  <!-- <link rel=\"stylesheet\" href=\"../style/style.css\"> -->\r\n</head>\r\n  <body>\r\n    <h1>Speech to Text</h1>\r\n    <button id=\"start-btn\">Start Recording</button>\r\n    <button id=\"stop-btn\" disabled>Stop Recording</button>\r\n    <p id=\"text\"></p>\r\n  </body>\r\n</template>\r\n\r\n\r\n<script>\r\nconst speechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\r\nconst recognition = new speechRecognition();\r\n\r\nrecognition.lang = 'id-ID';\r\nrecognition.interimResults = true;\r\nrecognition.maxAlternatives = 1;\r\n\r\nconst startBtn = document.getElementById('start-btn');\r\nconst stopBtn = document.getElementById('stop-btn');\r\nconst text = document.getElementById('text');\r\n\r\nlet transcript = '';\r\n\r\n\r\nexport default {\r\n  data(){\r\n    return{\r\n\r\n    }\r\n  },\r\n  methods:{\r\n    startRecord(){\r\n      recognition.onstart = () => {\r\n        console.log('Speech recognition service has started');\r\n        startBtn.disabled = true;\r\n        stopBtn.disabled = false;\r\n      }\r\n    },\r\n    stopRecord(){\r\n      recognition.onend = () => {\r\n        console.log('Speech recognition service has started');\r\n        startBtn.disabled = false;\r\n        stopBtn.disabled = true;\r\n      };\r\n    }\r\n  }  \r\n}\r\n\r\n\r\nrecognition.onstart = () => {\r\n  console.log('Speech recognition service has started');\r\n  startBtn.disabled = true;\r\n  stopBtn.disabled = false;\r\n};\r\n\r\nrecognition.onresult = (event) => {\r\n  const resultIndex = event.resultIndex;\r\n  const transcript = event.results[resultIndex][0].transcript;\r\n  console.log(transcript);\r\n  text.innerHTML = transcript;\r\n};\r\n\r\nrecognition.onend = () => {\r\n  console.log('Speech recognition service disconnected');\r\n  startBtn.disabled = false;\r\n  stopBtn.disabled = true;\r\n};\r\n\r\nrecognition.onerror = (event) => {\r\n  console.log('Error occurred in recognition: ' + event.error);\r\n};\r\n\r\nstartBtn.addEventListener('click', () => {\r\n  recognition.start();\r\n});\r\n\r\nstopBtn.addEventListener('click', () => {\r\n  recognition.stop();\r\n});\r\n</script>\r\n  "],"mappings":"AAeA,MAAMA,iBAAgB,GAAIC,MAAM,CAACC,iBAAgB,IAAKD,MAAM,CAACE,uBAAuB;AACpF,MAAMC,WAAU,GAAI,IAAIJ,iBAAiB,EAAE;AAE3CI,WAAW,CAACC,IAAG,GAAI,OAAO;AAC1BD,WAAW,CAACE,cAAa,GAAI,IAAI;AACjCF,WAAW,CAACG,eAAc,GAAI,CAAC;AAE/B,MAAMC,QAAO,GAAIC,QAAQ,CAACC,cAAc,CAAC,WAAW,CAAC;AACrD,MAAMC,OAAM,GAAIF,QAAQ,CAACC,cAAc,CAAC,UAAU,CAAC;AACnD,MAAME,IAAG,GAAIH,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC;AAE5C,IAAIG,UAAS,GAAI,EAAE;AAGnB,eAAe;EACbC,IAAIA,CAAA,EAAE;IACJ,OAAM,CAEN;EACF,CAAC;EACDC,OAAO,EAAC;IACNC,WAAWA,CAAA,EAAE;MACXZ,WAAW,CAACa,OAAM,GAAI,MAAM;QAC1BC,OAAO,CAACC,GAAG,CAAC,wCAAwC,CAAC;QACrDX,QAAQ,CAACY,QAAO,GAAI,IAAI;QACxBT,OAAO,CAACS,QAAO,GAAI,KAAK;MAC1B;IACF,CAAC;IACDC,UAAUA,CAAA,EAAE;MACVjB,WAAW,CAACkB,KAAI,GAAI,MAAM;QACxBJ,OAAO,CAACC,GAAG,CAAC,wCAAwC,CAAC;QACrDX,QAAQ,CAACY,QAAO,GAAI,KAAK;QACzBT,OAAO,CAACS,QAAO,GAAI,IAAI;MACzB,CAAC;IACH;EACF;AACF;AAGAhB,WAAW,CAACa,OAAM,GAAI,MAAM;EAC1BC,OAAO,CAACC,GAAG,CAAC,wCAAwC,CAAC;EACrDX,QAAQ,CAACY,QAAO,GAAI,IAAI;EACxBT,OAAO,CAACS,QAAO,GAAI,KAAK;AAC1B,CAAC;AAEDhB,WAAW,CAACmB,QAAO,GAAKC,KAAK,IAAK;EAChC,MAAMC,WAAU,GAAID,KAAK,CAACC,WAAW;EACrC,MAAMZ,UAAS,GAAIW,KAAK,CAACE,OAAO,CAACD,WAAW,CAAC,CAAC,CAAC,CAAC,CAACZ,UAAU;EAC3DK,OAAO,CAACC,GAAG,CAACN,UAAU,CAAC;EACvBD,IAAI,CAACe,SAAQ,GAAId,UAAU;AAC7B,CAAC;AAEDT,WAAW,CAACkB,KAAI,GAAI,MAAM;EACxBJ,OAAO,CAACC,GAAG,CAAC,yCAAyC,CAAC;EACtDX,QAAQ,CAACY,QAAO,GAAI,KAAK;EACzBT,OAAO,CAACS,QAAO,GAAI,IAAI;AACzB,CAAC;AAEDhB,WAAW,CAACwB,OAAM,GAAKJ,KAAK,IAAK;EAC/BN,OAAO,CAACC,GAAG,CAAC,iCAAgC,GAAIK,KAAK,CAACK,KAAK,CAAC;AAC9D,CAAC;AAEDrB,QAAQ,CAACsB,gBAAgB,CAAC,OAAO,EAAE,MAAM;EACvC1B,WAAW,CAAC2B,KAAK,EAAE;AACrB,CAAC,CAAC;AAEFpB,OAAO,CAACmB,gBAAgB,CAAC,OAAO,EAAE,MAAM;EACtC1B,WAAW,CAAC4B,IAAI,EAAE;AACpB,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}