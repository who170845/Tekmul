{"ast":null,"code":"export default {\n  __name: 'main',\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    const speechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n    const recognition = new speechRecognition();\n    recognition.lang = 'id-ID';\n    recognition.interimResults = true;\n    recognition.maxAlternatives = 1;\n    const startBtn = document.getElementById('start-btn');\n    const stopBtn = document.getElementById('stop-btn');\n    const text = document.getElementById('text');\n    let transcript = '';\n    recognition.onstart = () => {\n      console.log('Speech recognition service has started');\n      startBtn.disabled = true;\n      stopBtn.disabled = false;\n    };\n    recognition.onresult = event => {\n      const resultIndex = event.resultIndex;\n      const transcript = event.results[resultIndex][0].transcript;\n      console.log(transcript);\n      text.innerHTML = transcript;\n    };\n    recognition.onend = () => {\n      console.log('Speech recognition service disconnected');\n      startBtn.disabled = false;\n      stopBtn.disabled = true;\n    };\n    recognition.onerror = event => {\n      console.log('Error occurred in recognition: ' + event.error);\n    };\n    startBtn.addEventListener('click', () => {\n      recognition.start();\n    });\n    stopBtn.addEventListener('click', () => {\n      recognition.stop();\n    });\n    const __returned__ = {\n      speechRecognition,\n      recognition,\n      startBtn,\n      stopBtn,\n      text,\n      get transcript() {\n        return transcript;\n      },\n      set transcript(v) {\n        transcript = v;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["speechRecognition","window","SpeechRecognition","webkitSpeechRecognition","recognition","lang","interimResults","maxAlternatives","startBtn","document","getElementById","stopBtn","text","transcript","onstart","console","log","disabled","onresult","event","resultIndex","results","innerHTML","onend","onerror","error","addEventListener","start","stop"],"sources":["D:/kuliah/Sem 4/Tekmul/vue-router/client/src/views/main.vue"],"sourcesContent":["<template>\r\n<head>\r\n  <title> Speech To Text</title>\r\n  <link rel=\"stylesheet\" href=\"../style/style.css\">\r\n</head>\r\n  <body>\r\n    <h1>Speech to Text</h1>\r\n    <button id=\"start-btn\">Start Recording</button>\r\n    <button id=\"stop-btn\" disabled>Stop Recording</button>\r\n    <p id=\"text\"></p>\r\n  </body>\r\n</template>\r\n\r\n<script setup>\r\n\r\n  const speechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\r\nconst recognition = new speechRecognition();\r\n\r\nrecognition.lang = 'id-ID';\r\nrecognition.interimResults = true;\r\nrecognition.maxAlternatives = 1;\r\n\r\nconst startBtn = document.getElementById('start-btn');\r\nconst stopBtn = document.getElementById('stop-btn');\r\nconst text = document.getElementById('text');\r\n\r\nlet transcript = '';\r\n\r\nrecognition.onstart = () => {\r\n  console.log('Speech recognition service has started');\r\n  startBtn.disabled = true;\r\n  stopBtn.disabled = false;\r\n};\r\n\r\nrecognition.onresult = (event) => {\r\n  const resultIndex = event.resultIndex;\r\n  const transcript = event.results[resultIndex][0].transcript;\r\n  console.log(transcript);\r\n  text.innerHTML = transcript;\r\n};\r\n\r\nrecognition.onend = () => {\r\n  console.log('Speech recognition service disconnected');\r\n  startBtn.disabled = false;\r\n  stopBtn.disabled = true;\r\n};\r\n\r\nrecognition.onerror = (event) => {\r\n  console.log('Error occurred in recognition: ' + event.error);\r\n};\r\n\r\nstartBtn.addEventListener('click', () => {\r\n  recognition.start();\r\n});\r\n\r\nstopBtn.addEventListener('click', () => {\r\n  recognition.stop();\r\n});\r\n\r\n</script>\r\n\r\n  "],"mappings":";;;;;;IAeE,MAAMA,iBAAiB,GAAGC,MAAM,CAACC,iBAAiB,IAAID,MAAM,CAACE,uBAAuB;IACtF,MAAMC,WAAW,GAAG,IAAIJ,iBAAiB,EAAE;IAE3CI,WAAW,CAACC,IAAI,GAAG,OAAO;IAC1BD,WAAW,CAACE,cAAc,GAAG,IAAI;IACjCF,WAAW,CAACG,eAAe,GAAG,CAAC;IAE/B,MAAMC,QAAQ,GAAGC,QAAQ,CAACC,cAAc,CAAC,WAAW,CAAC;IACrD,MAAMC,OAAO,GAAGF,QAAQ,CAACC,cAAc,CAAC,UAAU,CAAC;IACnD,MAAME,IAAI,GAAGH,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC;IAE5C,IAAIG,UAAU,GAAG,EAAE;IAEnBT,WAAW,CAACU,OAAO,GAAG,MAAM;MAC1BC,OAAO,CAACC,GAAG,CAAC,wCAAwC,CAAC;MACrDR,QAAQ,CAACS,QAAQ,GAAG,IAAI;MACxBN,OAAO,CAACM,QAAQ,GAAG,KAAK;IAC1B,CAAC;IAEDb,WAAW,CAACc,QAAQ,GAAIC,KAAK,IAAK;MAChC,MAAMC,WAAW,GAAGD,KAAK,CAACC,WAAW;MACrC,MAAMP,UAAU,GAAGM,KAAK,CAACE,OAAO,CAACD,WAAW,CAAC,CAAC,CAAC,CAAC,CAACP,UAAU;MAC3DE,OAAO,CAACC,GAAG,CAACH,UAAU,CAAC;MACvBD,IAAI,CAACU,SAAS,GAAGT,UAAU;IAC7B,CAAC;IAEDT,WAAW,CAACmB,KAAK,GAAG,MAAM;MACxBR,OAAO,CAACC,GAAG,CAAC,yCAAyC,CAAC;MACtDR,QAAQ,CAACS,QAAQ,GAAG,KAAK;MACzBN,OAAO,CAACM,QAAQ,GAAG,IAAI;IACzB,CAAC;IAEDb,WAAW,CAACoB,OAAO,GAAIL,KAAK,IAAK;MAC/BJ,OAAO,CAACC,GAAG,CAAC,iCAAiC,GAAGG,KAAK,CAACM,KAAK,CAAC;IAC9D,CAAC;IAEDjB,QAAQ,CAACkB,gBAAgB,CAAC,OAAO,EAAE,MAAM;MACvCtB,WAAW,CAACuB,KAAK,EAAE;IACrB,CAAC,CAAC;IAEFhB,OAAO,CAACe,gBAAgB,CAAC,OAAO,EAAE,MAAM;MACtCtB,WAAW,CAACwB,IAAI,EAAE;IACpB,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}