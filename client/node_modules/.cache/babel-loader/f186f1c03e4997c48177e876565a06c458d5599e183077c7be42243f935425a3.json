{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"head\", null, [/*#__PURE__*/_createTextVNode(\" //\"), /*#__PURE__*/_createElementVNode(\"link\", {\n  rel: \"stylesheet\",\n  href: \"../style/style.css\"\n})], -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"tes\"\n}, [/*#__PURE__*/_createElementVNode(\"h1\", null, \"This is an Main page\")], -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _hoisted_2], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","rel","href","class","_hoisted_1","_hoisted_2"],"sources":["D:\\kuliah\\Sem 4\\Tekmul\\vue-router\\client\\src\\views\\main.vue"],"sourcesContent":["<template>\r\n<head>\r\n  //<link rel=\"stylesheet\" href=\"../style/style.css\">\r\n</head>\r\n  <div class=\"tes\">\r\n    <h1>This is an Main page</h1>\r\n  </div>\r\n</template>\r\n\r\n\r\n\r\n// <script>\r\n// const speechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\r\n// const recognition = new speechRecognition();\r\n\r\n// recognition.lang = 'id-ID';\r\n// recognition.interimResults = true;\r\n// recognition.maxAlternatives = 1;\r\n\r\n// const startBtn = document.getElementById('start-btn');\r\n// const stopBtn = document.getElementById('stop-btn');\r\n// const text = document.getElementById('text');\r\n\r\n// let transcript = '';\r\n\r\n// recognition.onstart = () => {\r\n//   console.log('Speech recognition service has started');\r\n//   startBtn.disabled = true;\r\n//   stopBtn.disabled = false;\r\n// };\r\n\r\n// recognition.onresult = (event) => {\r\n//   const resultIndex = event.resultIndex;\r\n//   const transcript = event.results[resultIndex][0].transcript;\r\n//   console.log(transcript);\r\n//   text.innerHTML = transcript;\r\n// };\r\n\r\n// recognition.onend = () => {\r\n//   console.log('Speech recognition service disconnected');\r\n//   startBtn.disabled = false;\r\n//   stopBtn.disabled = true;\r\n// };\r\n\r\n// recognition.onerror = (event) => {\r\n//   console.log('Error occurred in recognition: ' + event.error);\r\n// };\r\n\r\n// startBtn.addEventListener('click', () => {\r\n//   recognition.start();\r\n// });\r\n\r\n// stopBtn.addEventListener('click', () => {\r\n//   recognition.stop();\r\n// });\r\n// </script>\r\n\r\n  "],"mappings":";gCACAA,mBAAA,CAEO,e,8BAFD,KACF,G,aAAAA,mBAAA,CAAiD;EAA3CC,GAAG,EAAC,YAAY;EAACC,IAAI,EAAC;;gCAE9BF,mBAAA,CAEM;EAFDG,KAAK,EAAC;AAAK,I,aACdH,mBAAA,CAA6B,YAAzB,sBAAoB,E;;;6DAJ5BI,UAEO,EACLC,UAEM,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}