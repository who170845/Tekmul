{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { db, app } from \"../stores/index.js\";\nimport { getFirestore, collection, onSnapshot, addDoc, querySnapshot, getDocs, doc, deleteDoc, updateDoc } from \"firebase/firestore\";\nexport default {\n  data() {\n    return {\n      isListening: false,\n      transcript: \"\",\n      fullTransc: \"\",\n      recognition: null,\n      listTransc: []\n    };\n  },\n  methods: {\n    async AddData() {\n      try {\n        const docVal = await addDoc(collection(db, \"transkrip\"), {\n          transcript: \"tes, apakah berhasil?\",\n          text: \"cek, cek\",\n          //isi : document.getElementById(\"transc\"),\n          transc: this.fullTransc\n        });\n        const docUpd = doc(db, \"transkrip\", docVal.id);\n        await updateDoc(docUpd, {\n          id: docVal.id\n        });\n        console.log(\"script berhasil ditambahkan\", docVal.id);\n      } catch (err) {\n        console.log(\"script gagal ditambahkan\", err);\n      }\n      this.loadData();\n    },\n    async loadData() {\n      try {\n        const querySnapshot = await getDocs(collection(db, \"transkrip\"));\n        querySnapshot.forEach(doc => {\n          console.log(doc.data());\n          this.listTransc.push(doc.data());\n        });\n        console.log(\"data berhasil dimuat\");\n      } catch (err) {\n        console.log(\"data gagal dimuat\", err.massage);\n      }\n    },\n    async deleteData(id) {\n      try {\n        await deleteDoc(doc(db, \"transkrip\", id));\n        console.log(\"id :\", id, \"berhasil dihapus\");\n      } catch (err) {\n        console.log(\"data gagal dihapus\", err.massage);\n      }\n    },\n    startRecognition() {\n      this.recognition.start();\n    },\n    // stopRecognition() {\n    //   this.recognition.end();\n    // },\n    clear() {\n      let textarea = this.transcript;\n      this.transcript = \"\";\n    },\n    clearful() {\n      let textarea = document.getElementById('transc');\n      textarea.value = \"\";\n      this.fullTransc = \"\";\n    },\n    stopRecognition() {\n      this.recognition.stop();\n      this.isListening = false; // menandakan bahwa proses pengenalan suara sudah dihentikan\n    }\n  },\n\n  mounted() {\n    const speechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n    this.recognition = new speechRecognition();\n    this.recognition.lang = \"id-ID\";\n    this.recognition.interimResults = true;\n    this.recognition.maxAlternatives = 1;\n    this.recognition.onstart = () => {\n      console.log(\"Text to Speech telah hidup\");\n      this.isListening = true;\n    };\n    this.recognition.onresult = event => {\n      const resultIndex = event.resultIndex;\n      this.transcript = event.results[resultIndex][0].transcript;\n      //this.fullTransc += this.transcript + \" \";\n      console.log(this.transcript);\n    };\n    this.recognition.onend = () => {\n      this.fullTransc += this.transcript + \" \";\n      console.log(\"Text to Speech telah mati\");\n      // if (!this.isListening) {\n      //   // proses pengenalan suara sudah dihentikan secara manual\n      //   return;\n      // }\n      // this.recognition.start(); // memulai kembali proses pengenalan suara\n      this.isListening = false;\n    };\n    this.recognition.onerror = event => {\n      console.log(\"Error occurred in recognition: \" + event.error);\n      this.isListening = false;\n    };\n    this.loadData();\n  }\n};","map":{"version":3,"names":["db","app","getFirestore","collection","onSnapshot","addDoc","querySnapshot","getDocs","doc","deleteDoc","updateDoc","data","isListening","transcript","fullTransc","recognition","listTransc","methods","AddData","docVal","text","transc","docUpd","id","console","log","err","loadData","forEach","push","massage","deleteData","startRecognition","start","clear","textarea","clearful","document","getElementById","value","stopRecognition","stop","mounted","speechRecognition","window","SpeechRecognition","webkitSpeechRecognition","lang","interimResults","maxAlternatives","onstart","onresult","event","resultIndex","results","onend","onerror","error"],"sources":["D:\\kuliah\\Sem 4\\Tekmul\\vue-router\\client\\src\\views\\main.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div>\r\n        <button @click=\"startRecognition\" :disabled=\"isListening\">\r\n        Start\r\n        </button> || \r\n        <!-- <button @click=\"stopRecognition\" :disabled=\"!isListening\">\r\n          Stop\r\n        </button> <br> -->\r\n        <button @click=\"clear\">\r\n          Clear\r\n        </button> || \r\n        <button @click=\"stopRecognition\">\r\n          Stop\r\n        </button>\r\n    </div>\r\n    <br>\r\n    <div>   \r\n      <textarea name=\"result\" id=\"\" cols=\"30\" rows=\"10\">{{ transcript }}</textarea>\r\n      <br>\r\n\r\n      <button @click=\"clearful\">Clear</button> || \r\n      <button @click=\"AddData\"> Add transcript  </button>\r\n\r\n      <br>\r\n      <textarea name=\"full\" id=\"transc\" cols=\"30\" rows=\"10\"> {{ this.fullTransc }} </textarea>\r\n    </div>\r\n    <div>\r\n      <ul>\r\n        <li v-for=\"{transc, id} in listTransc\" :key=\"id\">\r\n          <p>{{ transc }}</p> <button @click=\"deleteData(id)\"> delete script </button>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport { db,app } from \"../stores/index.js\"\r\nimport {\r\n  getFirestore,\r\n  collection,\r\n  onSnapshot,\r\n  addDoc,\r\n  querySnapshot,\r\n  getDocs,\r\n  doc,\r\n  deleteDoc,\r\n  updateDoc\r\n} from \"firebase/firestore\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      isListening: false,\r\n      transcript: \"\",\r\n      fullTransc: \"\",\r\n      recognition: null,\r\n      listTransc: [],\r\n    };\r\n  },\r\n  methods: {\r\n    async AddData(){\r\n      try {\r\n        const docVal = await addDoc(collection(db, \"transkrip\"),{\r\n          transcript : \"tes, apakah berhasil?\",\r\n          text : \"cek, cek\",\r\n          //isi : document.getElementById(\"transc\"),\r\n          transc : this.fullTransc\r\n        });\r\n        const docUpd = doc(db, \"transkrip\", docVal.id);\r\n        await updateDoc(docUpd, {id: docVal.id});\r\n        console.log(\"script berhasil ditambahkan\", docVal.id);\r\n      }\r\n      catch(err) {\r\n        console.log(\"script gagal ditambahkan\", err);\r\n      }\r\n      this.loadData();\r\n    },\r\n    async loadData(){\r\n      try {\r\n        const querySnapshot = await getDocs(collection(db, \"transkrip\"));\r\n        querySnapshot.forEach((doc) =>{\r\n          console.log(doc.data());\r\n          this.listTransc.push(doc.data());\r\n        });\r\n        console.log(\"data berhasil dimuat\");\r\n      }\r\n      catch(err){\r\n        console.log(\"data gagal dimuat\", err.massage);\r\n      }\r\n    },\r\n    async deleteData(id){\r\n      try {\r\n        await deleteDoc(doc (db, \"transkrip\", id));\r\n        console.log(\"id :\", id, \"berhasil dihapus\");\r\n      }\r\n      catch(err) {\r\n        console.log(\"data gagal dihapus\", err.massage)\r\n      }\r\n    },\r\n    startRecognition() {\r\n      this.recognition.start();\r\n    },\r\n    // stopRecognition() {\r\n    //   this.recognition.end();\r\n    // },\r\n    clear(){\r\n      let textarea = this.transcript;\r\n      this.transcript = \"\";\r\n    },\r\n    clearful(){\r\n      let textarea = document.getElementById('transc');\r\n      textarea.value = \"\";\r\n      this.fullTransc = \"\";\r\n    },\r\n    stopRecognition() {\r\n      this.recognition.stop();\r\n      this.isListening = false; // menandakan bahwa proses pengenalan suara sudah dihentikan\r\n    },\r\n  },\r\n  mounted() {\r\n    const speechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\r\n    this.recognition = new speechRecognition();\r\n    this.recognition.lang = \"id-ID\";\r\n    this.recognition.interimResults = true;\r\n    this.recognition.maxAlternatives = 1;\r\n\r\n    this.recognition.onstart = () => {\r\n      console.log(\"Text to Speech telah hidup\");\r\n      this.isListening = true;\r\n    };\r\n\r\n    this.recognition.onresult = (event) => {\r\n      const resultIndex = event.resultIndex;\r\n      this.transcript = event.results[resultIndex][0].transcript;\r\n      //this.fullTransc += this.transcript + \" \";\r\n      console.log(this.transcript);\r\n    };\r\n\r\n    this.recognition.onend = () => {\r\n      this.fullTransc += this.transcript + \" \";\r\n    console.log(\"Text to Speech telah mati\");\r\n    // if (!this.isListening) {\r\n    //   // proses pengenalan suara sudah dihentikan secara manual\r\n    //   return;\r\n    // }\r\n    // this.recognition.start(); // memulai kembali proses pengenalan suara\r\n    this.isListening = false;\r\n  };\r\n\r\n    this.recognition.onerror = (event) => {\r\n      console.log(\"Error occurred in recognition: \" + event.error);\r\n      this.isListening = false;\r\n    };\r\n    this.loadData();\r\n  },\r\n    \r\n  \r\n};\r\n</script>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}