{"ast":null,"code":"const speechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\nconst recognition = new speechRecognition();\nrecognition.lang = 'id-ID';\nrecognition.interimResults = true;\nrecognition.maxAlternatives = 1;\nconst startBtn = document.getElementById('start-btn');\nconst stopBtn = document.getElementById('stop-btn');\nconst text = document.getElementById('text');\nlet transcript = '';\nexport default {\n  data() {\n    return {\n      button: true\n    };\n  },\n  methods: {\n    startRecord() {\n      recognition.onstart = () => {\n        console.log('Speech recognition service has started');\n      };\n      this.button = false;\n    },\n    stopRecord() {\n      recognition.onend = () => {\n        console.log('Speech recognition service has started');\n        this.button = true;\n      };\n    }\n  }\n};","map":{"version":3,"names":["speechRecognition","window","SpeechRecognition","webkitSpeechRecognition","recognition","lang","interimResults","maxAlternatives","startBtn","document","getElementById","stopBtn","text","transcript","data","button","methods","startRecord","onstart","console","log","stopRecord","onend"],"sources":["D:\\kuliah\\Sem 4\\Tekmul\\vue-router\\client\\src\\views\\main.vue"],"sourcesContent":["<template>\r\n<head>\r\n  <title> Speech To Text</title>\r\n  <!-- <link rel=\"stylesheet\" href=\"../style/style.css\"> -->\r\n</head>\r\n  <body>\r\n    <h1>Speech to Text</h1>\r\n    <button @click=\"startRecord()\" v-if=\"this.button == true\">Start Recording</button>\r\n    <button @click=\"stopRecord()\" v-if=\"this.button == false\">Stop Recording</button>\r\n    <p id=\"text\"></p>\r\n  </body>\r\n</template>\r\n\r\n\r\n<script>\r\nconst speechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\r\nconst recognition = new speechRecognition();\r\n\r\nrecognition.lang = 'id-ID';\r\nrecognition.interimResults = true;\r\nrecognition.maxAlternatives = 1;\r\n\r\nconst startBtn = document.getElementById('start-btn');\r\nconst stopBtn = document.getElementById('stop-btn');\r\nconst text = document.getElementById('text');\r\n\r\nlet transcript = '';\r\n\r\n\r\nexport default {\r\n  data(){\r\n    return{\r\n      button: true,\r\n    }\r\n  },\r\n  methods:{\r\n    startRecord(){\r\n      recognition.onstart = () => {\r\n        console.log('Speech recognition service has started');\r\n        \r\n      }\r\n      this.button = false;\r\n    },\r\n    stopRecord(){\r\n      recognition.onend = () => {\r\n        console.log('Speech recognition service has started');\r\n        this.button = true;\r\n      };\r\n    }\r\n  }  \r\n}\r\n\r\n</script>\r\n  "],"mappings":"AAeA,MAAMA,iBAAgB,GAAIC,MAAM,CAACC,iBAAgB,IAAKD,MAAM,CAACE,uBAAuB;AACpF,MAAMC,WAAU,GAAI,IAAIJ,iBAAiB,EAAE;AAE3CI,WAAW,CAACC,IAAG,GAAI,OAAO;AAC1BD,WAAW,CAACE,cAAa,GAAI,IAAI;AACjCF,WAAW,CAACG,eAAc,GAAI,CAAC;AAE/B,MAAMC,QAAO,GAAIC,QAAQ,CAACC,cAAc,CAAC,WAAW,CAAC;AACrD,MAAMC,OAAM,GAAIF,QAAQ,CAACC,cAAc,CAAC,UAAU,CAAC;AACnD,MAAME,IAAG,GAAIH,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC;AAE5C,IAAIG,UAAS,GAAI,EAAE;AAGnB,eAAe;EACbC,IAAIA,CAAA,EAAE;IACJ,OAAM;MACJC,MAAM,EAAE;IACV;EACF,CAAC;EACDC,OAAO,EAAC;IACNC,WAAWA,CAAA,EAAE;MACXb,WAAW,CAACc,OAAM,GAAI,MAAM;QAC1BC,OAAO,CAACC,GAAG,CAAC,wCAAwC,CAAC;MAEvD;MACA,IAAI,CAACL,MAAK,GAAI,KAAK;IACrB,CAAC;IACDM,UAAUA,CAAA,EAAE;MACVjB,WAAW,CAACkB,KAAI,GAAI,MAAM;QACxBH,OAAO,CAACC,GAAG,CAAC,wCAAwC,CAAC;QACrD,IAAI,CAACL,MAAK,GAAI,IAAI;MACpB,CAAC;IACH;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}