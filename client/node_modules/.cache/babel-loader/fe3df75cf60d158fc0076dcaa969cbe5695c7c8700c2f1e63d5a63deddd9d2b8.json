{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = [\"disabled\"];\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_3 = {\n  name: \"result\",\n  id: \"transc\",\n  cols: \"20\",\n  rows: \"10\",\n  disabled: \"\"\n};\nconst _hoisted_4 = {\n  name: \"full\",\n  id: \"fulltransc\",\n  cols: \"20\",\n  rows: \"10\",\n  disabled: \"\"\n};\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_7 = {\n  name: \"result\",\n  id: \"\",\n  cols: \"30\",\n  rows: \"10\",\n  disabled: \"\"\n};\nconst _hoisted_8 = [\"onClick\"];\nconst _hoisted_9 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"div\", null, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.startRecognition && $options.startRecognition(...args)),\n    disabled: $data.isListening\n  }, \" Start \", 8 /* PROPS */, _hoisted_1), _createTextVNode(\" || \"), _createCommentVNode(\" <button @click=\\\"stopRecognition\\\" :disabled=\\\"!isListening\\\">\\r\\n          Stop\\r\\n        </button> <br> \"), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.clear && $options.clear(...args))\n  }, \" Clear \"), _createTextVNode(\" || \"), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.stopRecognition && $options.stopRecognition(...args))\n  }, \" Stop \")]), _hoisted_2, _createElementVNode(\"div\", null, [_createElementVNode(\"textarea\", _hoisted_3, _toDisplayString($data.transcript), 1 /* TEXT */), _createTextVNode(\" ~~ \"), _createElementVNode(\"textarea\", _hoisted_4, _toDisplayString(this.fullTransc) + _toDisplayString(this.transcript) + \" \", 1 /* TEXT */), _hoisted_5, _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.clearful && $options.clearful(...args))\n  }, \"Clear\"), _createTextVNode(\" || \"), _createElementVNode(\"button\", {\n    onClick: _cache[4] || (_cache[4] = (...args) => $options.AddData && $options.AddData(...args))\n  }, \" Add transcript \"), _createElementVNode(\"button\", {\n    onClick: _cache[5] || (_cache[5] = (...args) => $options.checkTextarea && $options.checkTextarea(...args))\n  }, \" cek textarea \"), _hoisted_6]), _createElementVNode(\"div\", null, [_createElementVNode(\"textarea\", _hoisted_7, _toDisplayString(), 1 /* TEXT */), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.listTransc, ({\n    text,\n    id\n  }) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: id\n    }, [_createElementVNode(\"p\", null, _toDisplayString(text), 1 /* TEXT */), _createElementVNode(\"button\", {\n      onClick: $event => $options.deleteData(id)\n    }, \" delete script \", 8 /* PROPS */, _hoisted_8), _createElementVNode(\"button\", {\n      onClick: $event => $options.runQuery(text)\n    }, \"Cek\", 8 /* PROPS */, _hoisted_9)]);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["_createElementVNode","name","id","cols","rows","disabled","_createElementBlock","onClick","_cache","args","$options","startRecognition","$data","isListening","_hoisted_1","_createCommentVNode","clear","stopRecognition","_hoisted_2","_hoisted_3","_toDisplayString","transcript","_hoisted_4","fullTransc","_hoisted_5","clearful","AddData","checkTextarea","_hoisted_6","_hoisted_7","_Fragment","_renderList","listTransc","text","key","$event","deleteData","_hoisted_8","runQuery","_hoisted_9"],"sources":["D:\\kuliah\\Sem 4\\Tekmul\\vue-router\\client\\src\\views\\main.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div>\r\n        <button @click=\"startRecognition\" :disabled=\"isListening\">\r\n        Start\r\n        </button> || \r\n        <!-- <button @click=\"stopRecognition\" :disabled=\"!isListening\">\r\n          Stop\r\n        </button> <br> -->\r\n        <button @click=\"clear\">\r\n          Clear\r\n        </button> || \r\n        <button @click=\"stopRecognition\">\r\n          Stop\r\n        </button>\r\n    </div>\r\n    <br>\r\n    <div>   \r\n      <textarea name=\"result\" id=\"transc\" cols=\"20\" rows=\"10\" disabled>{{ transcript }}</textarea> ~~\r\n      <textarea name=\"full\" id=\"fulltransc\" cols=\"20\" rows=\"10\" disabled>{{ this.fullTransc }}{{this.transcript}} </textarea>\r\n      <br>\r\n\r\n      <button @click=\"clearful\">Clear</button> || \r\n      <button @click=\"AddData\"> Add transcript  </button>\r\n      <button @click=\"checkTextarea\"> cek textarea </button>\r\n\r\n      <br>\r\n      \r\n    </div>\r\n    <div>\r\n      <textarea name=\"result\" id=\"\" cols=\"30\" rows=\"10\" disabled>{{  }}</textarea>\r\n      <ul>\r\n        <li v-for=\"{text, id} in listTransc\" :key=\"id\">\r\n          <p>{{ text }}</p>\r\n          <button @click=\"deleteData(id)\"> delete script </button>\r\n          <button @click=\"runQuery(text)\">Cek</button>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport { db,app } from \"../stores/index.js\"\r\nimport {\r\n  getFirestore,\r\n  collection,\r\n  onSnapshot,\r\n  addDoc,\r\n  querySnapshot,\r\n  getDocs,\r\n  doc,\r\n  deleteDoc,\r\n  updateDoc\r\n} from \"firebase/firestore\";\r\nimport fetch from \"node-fetch\"\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      isListening: false,\r\n      transcript: \"\",\r\n      currTransc: \"\",\r\n      fullTransc: \"\",\r\n      recognition: null,\r\n      listTransc: [],\r\n    };\r\n  },\r\n  methods: {\r\n    checkTextarea() {\r\n      var textarea = document.getElementById(\"transc\");\r\n      if (textarea.value.trim() === \"\") {\r\n        console.log(\"Textarea is empty\");\r\n      } else {\r\n        console.log(\"Textarea is not empty\");\r\n      }\r\n    },\r\n    async AddData(){\r\n      try {\r\n        this.fullTransc += this.currTransc;\r\n        const docVal = await addDoc(collection(db, \"transkrip\"),{\r\n          //isi : document.getElementById(\"transc\"),\r\n          text : this.fullTransc\r\n        });\r\n        const docUpd = doc(db, \"transkrip\", docVal.id);\r\n        await updateDoc(docUpd, {id: docVal.id});\r\n        console.log(\"script berhasil ditambahkan\", docVal.id);\r\n      }\r\n      catch(err) {\r\n        console.log(\"script gagal ditambahkan\", err);\r\n      }\r\n      this.loadData();\r\n    },\r\n    async loadData(){\r\n      try {\r\n        const querySnapshot = await getDocs(collection(db, \"transkrip\"));\r\n        this.listTransc = [];\r\n        querySnapshot.forEach((doc) =>{\r\n          console.log(doc.data());\r\n          this.listTransc.push(doc.data());\r\n        });\r\n        console.log(\"data berhasil dimuat\");\r\n      }\r\n      catch(err){\r\n        console.log(\"data gagal dimuat\", err);\r\n      }\r\n    },\r\n    async deleteData(id){\r\n      try {\r\n        await deleteDoc(doc (db, \"transkrip\", id));\r\n        console.log(\"id :\", id, \"berhasil dihapus\");\r\n      }\r\n      catch(err) {\r\n        console.log(\"data gagal dihapus\", err.massage)\r\n      }\r\n      this.loadData();\r\n    },\r\n    async runQuery(text) {\r\n      try {\r\n        const response = await fetch(\r\n          \"https://api-inference.huggingface.co/models/abid/indonesia-bioner\",\r\n          {\r\n            headers: {\r\n              Authorization: \"Bearer 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\",\r\n            },\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n              \"inputs\": text,\r\n            }),\r\n          }\r\n        );\r\n        const result = await response.json();\r\n        console.log(JSON.stringify(result));\r\n      } \r\n      catch (error) {\r\n        console.error(error);\r\n      }\r\n    },\r\n    startRecognition() {\r\n      var textarea = document.getElementById(\"transc\");\r\n      if (textarea.value.trim() != \"\"){\r\n        this.fullTransc += this.currTransc;\r\n      }\r\n      this.recognition.start();\r\n    },\r\n    clear(){\r\n      let textarea = this.transcript;\r\n      this.transcript = \"\";\r\n    },\r\n    clearful(){\r\n      // let textarea = document.getElementById('transc');\r\n      // textarea.value = \"\";\r\n      this.fullTransc = \"\";\r\n    },\r\n    stopRecognition() {\r\n      this.recognition.stop();\r\n      this.isListening = false; // menandakan bahwa proses pengenalan suara sudah dihentikan\r\n    },\r\n  },\r\n  mounted() {\r\n    const speechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\r\n    this.recognition = new speechRecognition();\r\n    this.recognition.lang = \"id-ID\";\r\n    this.recognition.interimResults = true;\r\n    this.recognition.maxAlternatives = 1;\r\n\r\n    this.recognition.onstart = () => {\r\n      console.log(\"Text to Speech telah hidup\");\r\n      this.isListening = true;\r\n    };\r\n\r\n    this.recognition.onresult = (event) => {\r\n      const resultIndex = event.resultIndex;\r\n      this.transcript = event.results[resultIndex][0].transcript;\r\n      //this.fullTransc += this.transcript + \" \";\r\n      console.log(this.transcript);\r\n    };\r\n\r\n    this.recognition.onend = () => {\r\n    this.currTransc = this.transcript + \". \";\r\n    console.log(\"Text to Speech telah mati\");\r\n    // if (!this.isListening) {\r\n    //   // proses pengenalan suara sudah dihentikan secara manual\r\n    //   return;\r\n    // }\r\n    // this.recognition.start(); // memulai kembali proses pengenalan suara\r\n    this.isListening = false;\r\n  };\r\n\r\n    this.recognition.onerror = (event) => {\r\n      console.log(\"Error occurred in recognition: \" + event.error);\r\n      this.isListening = false;\r\n    };\r\n    this.loadData();\r\n  },\r\n    \r\n  \r\n};\r\n</script>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}