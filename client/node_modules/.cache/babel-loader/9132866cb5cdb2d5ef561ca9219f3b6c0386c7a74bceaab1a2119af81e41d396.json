{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"head\", null, [/*#__PURE__*/_createElementVNode(\"title\", null, \" Speech To Text\"), /*#__PURE__*/_createCommentVNode(\" <link rel=\\\"stylesheet\\\" href=\\\"../style/style.css\\\"> \")], -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Speech to Text\", -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"p\", {\n  id: \"text\"\n}, null, -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createElementVNode(\"body\", null, [_hoisted_2, this.button == true ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 0,\n    onClick: _cache[0] || (_cache[0] = $event => $options.startRecord())\n  }, \"Start Recording\")) : _createCommentVNode(\"v-if\", true), this.button == false ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 1,\n    onClick: _cache[1] || (_cache[1] = $event => $options.stopRecord())\n  }, \"Stop Recording\")) : _createCommentVNode(\"v-if\", true), _hoisted_3])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","_createCommentVNode","id","_hoisted_1","_hoisted_2","button","_createElementBlock","onClick","_cache","$event","$options","startRecord","stopRecord","_hoisted_3"],"sources":["D:\\kuliah\\Sem 4\\Tekmul\\vue-router\\client\\src\\views\\main.vue"],"sourcesContent":["<template>\r\n<head>\r\n  <title> Speech To Text</title>\r\n  <!-- <link rel=\"stylesheet\" href=\"../style/style.css\"> -->\r\n</head>\r\n  <body>\r\n    <h1>Speech to Text</h1>\r\n    <button @click=\"startRecord()\" v-if=\"this.button == true\">Start Recording</button>\r\n    <button @click=\"stopRecord()\" v-if=\"this.button == false\">Stop Recording</button>\r\n    <p id=\"text\"></p>\r\n  </body>\r\n</template>\r\n\r\n\r\n<script>\r\nconst speechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\r\nconst recognition = new speechRecognition();\r\n\r\nrecognition.lang = 'id-ID';\r\nrecognition.interimResults = true;\r\nrecognition.maxAlternatives = 1;\r\n\r\nlet transcript = '';\r\n\r\n\r\nexport default {\r\n  data(){\r\n    return{\r\n      button: true,\r\n      result1: null,\r\n      result2: null\r\n    }\r\n  },\r\n  methods:{\r\n    startRecord(){\r\n      recognition.onstart;\r\n      console.log('Speech recognition service has started');\r\n      this.button = false;\r\n    },\r\n    stopRecord(){\r\n      recognition.onend; \r\n      console.log('Speech recognition service has stopped');\r\n      this.button = true;\r\n    },\r\n    result(){\r\n      speechRecognition.onresult = (event) => {\r\n      // Create the interim transcript string locally because we don't want it to persist like final transcript\r\n      let interim_transcript = \"\";\r\n\r\n      // Loop through the results from the speech recognition object.\r\n      for (let i = event.resultIndex; i < event.results.length; ++i) {\r\n        // If the result item is Final, add it to Final Transcript, Else add it to Interim transcript\r\n        if (event.results[i].isFinal) {\r\n          final_transcript += event.results[i][0].transcript;\r\n        } else {\r\n          interim_transcript += event.results[i][0].transcript;\r\n        }\r\n      }\r\n\r\n      // Set the Final franscript and Interim transcript.\r\n      result1 = final_transcript;\r\n      result2 = interim_transcript;\r\n};\r\n    }\r\n  }  \r\n}\r\n\r\n</script>\r\n  "],"mappings":";gCACAA,mBAAA,CAGO,e,aAFLA,mBAAA,CAA8B,eAAvB,iBAAe,G,aACtBC,mBAAA,2DAA0D,C;gCAGxDD,mBAAA,CAAuB,YAAnB,gBAAc;gCAGlBA,mBAAA,CAAiB;EAAdE,EAAE,EAAC;AAAM;;;6DARhBC,UAGO,EACLH,mBAAA,CAKO,eAJLI,UAAuB,E,KACmBC,MAAM,Y,cAAhDC,mBAAA,CAAkF;;IAAzEC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,QAAA,CAAAC,WAAW;KAA+B,iBAAe,K,wCAChCN,MAAM,a,cAA/CC,mBAAA,CAAiF;;IAAxEC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,QAAA,CAAAE,UAAU;KAAgC,gBAAc,K,mCACxEC,UAAiB,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}